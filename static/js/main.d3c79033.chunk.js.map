{"version":3,"sources":["components/Spinner.js","contexts/idbContext.js","application/utils.js","application/noteOperations.js","contants/noteColors.js","actions/doNoteAction.js","actions/doFolderAction.js","pages/HomePage/Header/SelectionHeader.js","pages/HomePage/Header/FolderList.js","pages/HomePage/Header/DialogWithTextField.js","pages/HomePage/Header/DeleteFolder.js","pages/HomePage/Header/HomePageHeader.js","pages/HomePage/Header/index.js","workers/search.js","pages/HomePage/SearchBar/index.js","components/TextView.js","pages/HomePage/NotesContainer/Note.js","pages/HomePage/NotesContainer/NoNotesFallback.js","pages/HomePage/NotesContainer/index.js","pages/HomePage/AddNotes/index.js","pages/HomePage/BottomNotesOperations/index.js","pages/HomePage/index.js","pages/NotePage/NoteHeaderToolbar/Circle.js","pages/NotePage/NoteHeaderToolbar/ColorSelector.js","pages/NotePage/NoteHeaderToolbar/index.js","contants/richTextOptions.js","pages/NotePage/NoteHeaderToolbar/RichTextOptions.js","pages/NotePage/NoteBody/index.js","workers/wordCount.js","pages/NotePage/index.js","pages/404/index.js","indexedDB/index.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","color","props","classes","react_default","a","createElement","style","width","height","display","justifyContent","alignItems","CircularProgress_default","Object","assign","className","idbContext","createContext","isTrashFolder","folder","id","getTwelveHourFormat","hours","minutes","period","concat","getReadableTimeStamp","timestamp","diffTimestamp","Date","getTime","date","dateString","toDateString","_timeString$split","toTimeString","split","_timeString$split2","toArray","_dateString$split","slice","_dateString$split2","slicedToArray","dayOfWeek","month","day","year","time","OPTION_DELETE","operation","label","OPTION_MOVE","OPTION_RESTORE","WHITE","value","circleColor","optionColor","colors","getColorFromLabel","filteredColor","filter","CREATE_NOTE","GET_ALL_NOTES","DELETE_NOTES","MOVE_NOTES","GET_NOTE_BY_ID","CHANGE_NOTE_COLOR","SAVE_NOTE","GET_NOTES_BY_IDS","updateOpenedFolder","_ref","asyncToGenerator","regenerator_default","mark","_callee","db","folderId","setOpenedFolder","tx","foldersStore","wrap","_context","prev","next","transaction","objectStore","get","sent","stop","this","_x","_x2","_x3","apply","arguments","doNoteAction","action","params","idb","openedFolder","changeRoute","then","_ref2","_callee2","notesStore","openedFolderFromDB","_context2","count","put","add","content","previewContent","structuredContent","defaultContent","heading","creationTimestamp","lastModifiedTimestamp","abrupt","complete","_x4","_ref3","_callee3","store","index","note","_context3","_x5","setFetching","setNotes","folderNotes","range","IDBKeyRange","only","undefined","openCursor","cursorLoop","cursor","continue","push","selection","_ref4","_callee6","notesObjectStore","foldersObjectStore","trashFolder","folderIdNotesMap","_context6","map","noteId","delete","length","_ref5","_callee4","_context4","_x7","keys","_ref6","_callee5","_context5","_x8","_x6","moveToFolderId","_ref7","_callee9","dstFolder","_context9","Promise","all","_ref8","_callee7","_context7","_x10","_ref9","_callee8","_context8","_x11","_x9","setNote","setValue","_ref10","_callee10","_context10","Number","parseInt","Value","fromJSON","_x12","_ref11","_callee11","dBnote","_context11","_x13","_ref12","_callee12","_context12","_x14","_params$note","serializedContent","Plain","serialize","_ref13","_callee13","_context13","substr","toJSON","_x15","_ref14","_callee14","dbNote","_context14","_x16","noteIds","notes","console","log","OPEN_RENAME_FOLDER_MODAL","OPEN_DELETE_FOLDER_MODAL","OPEN_CREATE_FOLDER_MODAL","RENAME_FOLDER","DELETE_FOLDER","CREATE_FOLDER","GET_ALL_NOTES_FOLDER","GET_ALL_FOLDERS","FolderMenuOptions","doFolderAction","actionName","folder_id","close","setSnackError","_setOpenedFolder","_idb","setShowDropdown","_setOpen2","_idb2","_setOpenedFolder2","_value","_close","_setSnackError","_idb3","_setOpenedFolder3","_idb4","setFolders","_params$foldersToExcl","foldersToExclude","idbFolders","t0","setOpen","name","catch","loopFolders","includes","iconButtonStyle","padding","lineHeight","fontSize","fontWeight","setSelection","clearDropDown","clearSelectionCallback","useCallback","selectAllNotes","useEffect","allNotesSelected","useMemo","IconButton_default","onClick","Clear_default","Typography_default","component","DoneAll_default","withRouter","folders","show","history","components_Spinner","maxHeight","opacity","react","key","selectFolder","rootTextField","backgroundColor","create","headerLabel","useContext","IDBContext","_useState","useState","_useState2","Paper_default","TextField_default","InputProps","focussed","onChange","e","target","variant","Button_default","FolderNameButton","showDropdown","stopPropagation","MoreOptions","setAnchorEl","currentTarget","Options","anchorEl","Menu_default","open","Boolean","onClose","option","systemFolder","MenuItem_default","HomePageHeader","_useState3","_useState4","_useState5","_useState6","HomePageHeader_FolderNameButton","HomePageHeader_MoreOptions","HomePageHeader_Options","Header_FolderList","Dialog_default","Header_DialogWithTextField","Header_DeleteFolder","Header","homePageHeaderProps","objectWithoutProperties","Header_SelectionHeader","Header_HomePageHeader","searchWorker","workerize","searchNotes","debounce","searchText","search","background","borderRadius","notchedOutline","border","marginRight","marginLeft","clearValue","placeholder","startAdornment","InputAdornment_default","position","Search_default","endAdornment","input","TextView","children","cardRootStyle","boxSizing","margin","textOverflow","overflow","isCheceked","checkCallback","toConsumableArray","noteClicked","Card_default","components_TextView","Checkbox_default","bottom","right","zIndex","checked","icon","RadioButtonUnchecked_default","checkedIcon","CheckCircleRounded_default","NoNotesFallback","alignSelf","memo","fetching","NotesContainer_Note","NotesContainer_NoNotesFallback","prevProps","nextProps","prevNotes","prevSelection","prevFetching","nextNotes","nextSelection","nextFetching","fabRoot","&:hover","iconRoot","replace","createNote","Fab_default","Add_default","BottomOption","Icon","callback","buttonRoot","listItemPrimary","maxWidth","whiteSpace","flexJustifyCenter","options","setCreateDialogOpen","deleteNotesCallback","moveToCallback","closeDialog","openDialog","BottomNotesOperations_BottomOption","Folder","Restore","Delete","getBottomOptionProps","scroll","ListItem_default","ListItemText_default","primary","Divider_default","List_default","Fragment","button","HomePage","match","snackError","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","bottomOptions","closeSnackBar","showBottomToolbar","HomePage_Header","HomePage_SearchBar","HomePage_NotesContainer","HomePage_AddNotes","HomePage_BottomNotesOperations","Snackbar_default","autoHideDuration","message","Circle","ColorSelector","colorOptions","NoteHeaderToolbar_Circle","iconSize","NoteHeaderToolbar","iconClick","backButtonClick","doneButtonClick","noteColor","editorRef","undo","preventDefault","current","redo","KeyboardArrowLeft_default","Undo_default","objectSpread","Redo_default","Done_default","MoreVert_default","Popper_default","placement","NoteHeaderToolbar_ColorSelector","QUOTE","marks","defaultStyle","activeStyle","hasBlock","type","blocks","some","node","getIconForOption","isMark","isActive","activeMarks","hasMark","document","size","parent","getParent","first","FormatBold_default","FormatItalic_default","FormatUnderlined_default","FormatSize_default","FormatQuote_default","FormatListBulleted_default","FormatListNumbered_default","RichTextOptions","boxShadow","index_es","toggleMark","event","setBlocks","unwrapBlock","isList","isType","block","getClosest","wrapBlock","onClickBlock","dangerouslySetInnerHTML","__html","saveNote","NoteBody","wordCount","NoteHeaderToolbar_RichTextOptions","slate_react_es","spellCheck","autoFocus","ref","editor","onKeyDown","renderNode","attributes","renderMark","worker","toolTipAnchorEl","setToolTipAnchorEl","setWordCount","tools","closeToolTip","wordCountWorker","countWords","useRef","NotePage_NoteHeaderToolbar","NotePage_NoteBody","FourOhFour","flexDirection","marginBottom","marginTop","react_router_dom","to","DEFAULT_NOTE_TEXT","initializeIDB","openDb","upgradeDb","oldVersion","createObjectStore","keyPath","autoIncrement","createIndex","unique","deserialize","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","contexts_idbContext","Provider","react_router","path","exact","pathname","state","from","location","NotePage","Component","window","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3c79033.chunk.js","sourcesContent":["import React from 'react'; \nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropsTypes from 'prop-types';\n\nconst Spinner = props => {\n    const {classes} = props;\n    return (<div style={{\n        width: '100%',\n        height: '50vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}>\n        <CircularProgress className={classes.root} {...props}/>\n        </div>);\n}\n\nSpinner.propTypes = {\n    classes: PropsTypes.object,\n};\n\n// TODO: fix this\nconst styles = theme => ({\n    root: {\n        color: '#969696',\n    }\n});\n\nexport default withStyles(styles)(Spinner);","import { createContext } from 'react';\n\nconst idbContext = createContext();\n\nexport default idbContext;\n","const isTrashFolder = folder => folder.id === 2;\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 4 * WEEK;\nconst YEAR = 52 * WEEK;\n\nconst getTwelveHourFormat = (hours, minutes) => {\n    const period = hours > 12 ? 'PM' : 'AM';\n    const hour = hours % 12 || 12;\n    return `${hour}:${minutes} ${period}`;\n}\n\nconst getReadableTimeStamp = timestamp => {\n    const now = new Date().getTime();\n    const diffTimestamp = now - timestamp;\n    const date = new Date(timestamp);\n    const dateString = date.toDateString();\n    const timeString = date.toTimeString();\n    const [hours, minutes, ...rest] = timeString.split(':');\n    const [dayOfWeek, month, day, year] = dateString.split(' ');\n    const time = getTwelveHourFormat(hours, minutes);\n\n    if (diffTimestamp <= DAY) {\n        // if same day -> time\n        return getTwelveHourFormat(hours, minutes);\n    } else if (diffTimestamp <= WEEK) {\n        // if same week -> day time\n        return `${dayOfWeek} ${time}`;\n    } else if (diffTimestamp <= MONTH) {\n        // if same month -> dd day\n        return `${dayOfWeek} ${day} ${time}`\n    } else if (diffTimestamp <= YEAR) {\n        // if same year -> dd month \n        return `${dayOfWeek} ${day} ${month}`\n    } else {\n        // else -> dd month year\n        return `${day} ${month} ${year}`\n    }\n}\n\nexport {\n    isTrashFolder,\n    getReadableTimeStamp\n}","import { isTrashFolder } from './utils';\n\nconst OPTION_DELETE = {\n    operation: 'delete',\n    label: 'Delete',\n};\nconst OPTION_MOVE = {\n    operation: 'move',\n    label: 'Move',\n};\nconst OPTION_RESTORE = {\n    operation: 'restore',\n    label: 'Restore'\n};\n\nconst options = (folder) => (\n    folder && [(isTrashFolder(folder) ? OPTION_RESTORE : OPTION_MOVE), OPTION_DELETE]) || [];\n\n\nexport {\n    options,\n    OPTION_DELETE,\n    OPTION_MOVE,\n    OPTION_RESTORE\n}","const WHITE = {\n    label: 'white',\n    value: '#f5f5f5',\n    circleColor: '#e0e0e0',\n    optionColor: '#fbc02d',\n}\nconst RED = {\n    label: 'red',\n    value: '#ef9a9a',\n    circleColor: '#ef5350',\n    optionColor: '#ef5350',\n}\nconst GREEN = {\n    label: 'green',\n    value: '#a5d6a7',\n    circleColor: '#43a047',\n    optionColor: '#43a047',\n}\nconst BLUE = {\n    label: 'blue',\n    value: '#90caf9',\n    circleColor: '#1e88e5',\n    optionColor: '#1e88e5',\n}\nconst YELLOW = {\n    label: 'yellow',\n    value: '#fff59d',\n    circleColor: '#fbc02d',\n    optionColor: '#fbc02d',\n}\n\nconst colors = [WHITE, RED, GREEN, BLUE, YELLOW];\n\nconst getColorFromLabel = (label, color) => {\n    const filteredColor = colors.filter(color => color.label === label)[0];\n    return filteredColor ? filteredColor[color] : WHITE.value;\n}\n\nexport {\n    WHITE,\n    RED,\n    GREEN,\n    BLUE,\n    YELLOW,\n    getColorFromLabel,\n}\n\nexport default colors;","import { Value } from 'slate';\nimport Plain from 'slate-plain-serializer';\n\nimport defaultContent from '../contants/noteDefaultValue.json';\n\nimport { WHITE } from '../contants/noteColors';\n\nconst CREATE_NOTE = { operation: 'create_note' };\nconst GET_ALL_NOTES = { operation: 'get_all_notes' };\nconst DELETE_NOTES = { operation: 'delete_notes' };\nconst MOVE_NOTES = { operation: 'move_notes' };\n\nconst GET_NOTE_BY_ID = { operation: 'get_note_by_id' };\nconst CHANGE_NOTE_COLOR = { operation: 'change_note_color' };\nconst SAVE_NOTE = { operation: 'save_note' };\nconst GET_NOTES_BY_IDS = { operation: 'get_notes_by_ids' };\n\nconst updateOpenedFolder = async (db, folderId, setOpenedFolder) => {\n\tlet tx = db.transaction('folders', 'readonly');\n\tlet foldersStore = tx.objectStore('folders');\n\tlet folder = await foldersStore.get(folderId);\n\tsetOpenedFolder(folder);\n};\n\nconst doNoteAction = (action, params) => {\n\tswitch (action) {\n\t\tcase CREATE_NOTE.operation: {\n\t\t\tconst { idb, openedFolder, setOpenedFolder, changeRoute } = params;\n\t\t\tconst timestamp = new Date().getTime();\n\t\t\tidb\n\t\t\t\t.then(async (db) => {\n\t\t\t\t\tlet tx = db.transaction(['notes', 'folders'], 'readwrite');\n\t\t\t\t\tlet notesStore = tx.objectStore('notes');\n\t\t\t\t\tlet foldersStore = tx.objectStore('folders');\n\n\t\t\t\t\tlet openedFolderFromDB = await foldersStore.get(openedFolder.id);\n\t\t\t\t\topenedFolderFromDB.count += 1;\n\n\t\t\t\t\tfoldersStore.put(openedFolderFromDB);\n\n\t\t\t\t\tnotesStore.add({\n\t\t\t\t\t\tcolor: WHITE.label,\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t\tpreviewContent: '',\n\t\t\t\t\t\tstructuredContent: defaultContent,\n\t\t\t\t\t\theading: '',\n\t\t\t\t\t\tfolderId: openedFolder.id,\n\t\t\t\t\t\tcreationTimestamp: timestamp,\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp\n\t\t\t\t\t});\n\t\t\t\t\treturn tx.complete;\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetOpenedFolder(openedFolder);\n\t\t\t\t\tidb.then(async db => {\n\t\t\t\t\t\tlet tx = db.transaction(['notes'], 'readonly');\n\t\t\t\t\t\tlet store = tx.objectStore('notes');\n\t\t\t\t\t\tlet index = store.index('notesCreationTimestamp');\n\t\t\t\t\t\tlet note = await index.get(timestamp);\n\t\t\t\t\t\tchangeRoute(note.id);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase GET_ALL_NOTES.operation: {\n\t\t\tconst { idb, openedFolder, setFetching, setNotes } = params;\n\t\t\tconst folderNotes = [];\n\t\t\tif (openedFolder) {\n\t\t\t\tidb\n\t\t\t\t\t.then((db) => {\n\t\t\t\t\t\tsetFetching(true);\n\t\t\t\t\t\tlet tx = db.transaction('notes', 'readonly');\n\t\t\t\t\t\tlet store = tx.objectStore('notes');\n\t\t\t\t\t\tlet index = store.index('notesFolderId');\n\t\t\t\t\t\tlet range = IDBKeyRange.only(openedFolder.id);\n\t\t\t\t\t\tif (openedFolder.id === 1) {\n\t\t\t\t\t\t\trange = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn index.openCursor(range);\n\t\t\t\t\t})\n\t\t\t\t\t.then(function cursorLoop(cursor) {\n\t\t\t\t\t\tif (!cursor) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (cursor.value.folderId === 2 && openedFolder.id !== 2) {\n\t\t\t\t\t\t\treturn cursor.continue().then(cursorLoop);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { value } = cursor;\n\t\t\t\t\t\tfolderNotes.push(value);\n\t\t\t\t\t\treturn cursor.continue().then(cursorLoop);\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tsetNotes(folderNotes);\n\t\t\t\t\t\tsetFetching(false);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase DELETE_NOTES.operation: {\n\t\t\tconst { idb, selection, openedFolder, setOpenedFolder } = params;\n\t\t\tidb\n\t\t\t\t.then(async (db) => {\n\t\t\t\t\tconst timestamp = new Date().getTime();\n\t\t\t\t\tlet tx = db.transaction(['notes', 'folders'], 'readwrite');\n\t\t\t\t\tlet notesObjectStore = tx.objectStore('notes');\n\t\t\t\t\tlet foldersObjectStore = tx.objectStore('folders');\n\n\t\t\t\t\tlet trashFolder = await foldersObjectStore.get(2);\n\n\t\t\t\t\tif (openedFolder.id === 2) {\n\t\t\t\t\t\tselection.map((noteId) => notesObjectStore.delete(noteId));\n\t\t\t\t\t\ttrashFolder.count -= selection.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet folderIdNotesMap = {};\n\t\t\t\t\t\tfolderIdNotesMap[1] = selection.length;\n\n\t\t\t\t\t\tselection.map(async (noteId) => {\n\t\t\t\t\t\t\tlet note = await notesObjectStore.get(+noteId);\n\t\t\t\t\t\t\tif (folderIdNotesMap[note.folderId]) {\n\t\t\t\t\t\t\t\tfolderIdNotesMap[note.folderId] += 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderIdNotesMap[note.folderId] = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnote.folderId = 2;\n\t\t\t\t\t\t\tnotesObjectStore.put(note);\n\t\t\t\t\t\t});\n\n\n\t\t\t\t\t\tObject.keys(folderIdNotesMap).map(async folderId => {\n\t\t\t\t\t\t\tconst folder = await foldersObjectStore.get(+folderId);\n\t\t\t\t\t\t\tfolder.count -= folderIdNotesMap[folderId];\n\t\t\t\t\t\t\tfolder.timestamp = timestamp;\n\t\t\t\t\t\t\tfoldersObjectStore.put(folder);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttrashFolder.count += selection.length;\n\t\t\t\t\t\ttrashFolder.timestamp = timestamp;\n\t\t\t\t\t\tfoldersObjectStore.put(trashFolder);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tx.complete;\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tidb.then((db) => updateOpenedFolder(db, openedFolder.id, setOpenedFolder));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase MOVE_NOTES.operation: {\n\t\t\tconst { idb, selection, openedFolder, setOpenedFolder, moveToFolderId } = params;\n\t\t\tidb\n\t\t\t\t.then(async (db) => {\n\t\t\t\t\tconst timestamp = new Date().getTime();\n\t\t\t\t\tlet tx = db.transaction(['folders', 'notes'], 'readwrite');\n\t\t\t\t\tlet notesStore = tx.objectStore('notes');\n\t\t\t\t\tlet foldersStore = tx.objectStore('folders');\n\t\t\t\t\tlet folderIdNotesMap = {};\n\n\t\t\t\t\tlet dstFolder = await foldersStore.get(+moveToFolderId);\n\n\t\t\t\t\tawait Promise.all(selection.map(async (noteId) => {\n\t\t\t\t\t\tlet note = await notesStore.get(+noteId);\n\t\t\t\t\t\tif (folderIdNotesMap[note.folderId]) {\n\t\t\t\t\t\t\tfolderIdNotesMap[note.folderId] += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderIdNotesMap[note.folderId] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnote.folderId = dstFolder.id;\n\t\t\t\t\t\treturn notesStore.put(note);\n\t\t\t\t\t}));\n\n\t\t\t\t\tif (+moveToFolderId === 2) {\n\t\t\t\t\t\tfolderIdNotesMap[1] = selection.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete folderIdNotesMap[1];\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Promise.all(Object.keys(folderIdNotesMap).map(async folderId => {\n\t\t\t\t\t\tconst folder = await foldersStore.get(+folderId);\n\t\t\t\t\t\tfolder.count -= folderIdNotesMap[folderId];\n\t\t\t\t\t\tfolder.timestamp = timestamp;\n\t\t\t\t\t\treturn foldersStore.put(folder);\n\t\t\t\t\t}));\n\n\t\t\t\t\tdstFolder.count += selection.length;\n\t\t\t\t\tdstFolder.timestamp = timestamp;\n\t\t\t\t\tfoldersStore.put(dstFolder);\n\n\t\t\t\t\treturn tx.complete;\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tidb.then((db) => updateOpenedFolder(db, openedFolder.id, setOpenedFolder));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase GET_NOTE_BY_ID.operation: {\n\t\t\tconst { noteId, idb, setNote, setValue } = params;\n\t\t\treturn idb\n\t\t\t\t.then(async db => {\n\t\t\t\t\tlet tx = db.transaction(['notes'], 'readonly');\n\t\t\t\t\tlet store = tx.objectStore('notes');\n\t\t\t\t\tlet note = await store.get(Number.parseInt(noteId));\n\t\t\t\t\tsetValue(Value.fromJSON(note.structuredContent));\n\t\t\t\t\tsetNote(note);\n\t\t\t\t});\n\t\t}\n\t\tcase CHANGE_NOTE_COLOR.operation: {\n\t\t\tconst { note, idb, setNote, color } = params;\n\t\t\treturn idb.then(async (db) => {\n\t\t\t\tlet tx = db.transaction(['notes'], 'readwrite');\n\t\t\t\tlet store = tx.objectStore('notes');\n\t\t\t\tlet dBnote = await store.get(note.id);\n\t\t\t\tdBnote.color = color;\n\t\t\t\tstore.put(dBnote);\n\t\t\t\treturn tx.complete;\n\t\t\t}).then(() => {\n\t\t\t\tidb.then(async db => {\n\t\t\t\t\tlet tx = db.transaction(['notes'], 'readwrite');\n\t\t\t\t\tlet store = tx.objectStore('notes');\n\t\t\t\t\tlet dBnote = await store.get(note.id);\n\t\t\t\t\tsetNote(dBnote);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t\tcase SAVE_NOTE.operation: {\n\t\t\tconst { idb, note: { id, folderId }, value, setNote } = params;\n\t\t\tconst serializedContent = Plain.serialize(value);\n\t\t\treturn idb.then(async db => {\n\t\t\t\tlet tx = db.transaction(['notes', 'folders'], 'readwrite');\n\t\t\t\tlet notesStore = tx.objectStore('notes');\n\t\t\t\tlet foldersStore = tx.objectStore('folders');\n\t\t\t\tlet note = await notesStore.get(id);\n\t\t\t\tlet folder = await foldersStore.get(folderId);\n\t\t\t\tlet timestamp = new Date().getTime();\n\t\t\t\tnote.content = serializedContent;\n\t\t\t\tnote.previewContent = serializedContent.substr(0, 80);\n\t\t\t\tnote.structuredContent = value.toJSON();\n\t\t\t\tnote.lastModifiedTimestamp = timestamp;\n\t\t\t\tfolder.timestamp = timestamp;\n\t\t\t\tnotesStore.put(note);\n\t\t\t\tfoldersStore.put(folder);\n\t\t\t\treturn tx.complete;\n\t\t\t}).then(() => {\n\t\t\t\tidb.then(async db => {\n\t\t\t\t\tlet tx = db.transaction(['notes'], 'readonly');\n\t\t\t\t\tlet notesStore = tx.objectStore('notes');\n\t\t\t\t\tlet dbNote = await notesStore.get(id);\n\t\t\t\t\tsetNote(dbNote);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tcase GET_NOTES_BY_IDS.operation: {\n\t\t\tconst { idb, noteIds, setNotes } = params;\n\t\t\treturn idb.then(db => {\n\t\t\t\tconst tx = db.transaction(['notes'], 'readonly');\n\t\t\t\tconst store = tx.objectStore('notes');\n\t\t\t\tPromise.all(noteIds.map(noteId => store.get(noteId))).then((notes => setNotes(notes)));\n\t\t\t});\n\t\t}\n\t\tdefault:\n\t\t\tconsole.log('INVALID_OPERATION');\n\t}\n};\n\nexport {\n\tCREATE_NOTE,\n\tGET_ALL_NOTES,\n\tDELETE_NOTES,\n\tMOVE_NOTES,\n\n\tGET_NOTE_BY_ID,\n\tCHANGE_NOTE_COLOR,\n\tSAVE_NOTE,\n\tGET_NOTES_BY_IDS,\n};\n\nexport default doNoteAction;\n","const OPEN_RENAME_FOLDER_MODAL = { label: 'Rename', operation: 'open_rename_folder_modal' };\nconst OPEN_DELETE_FOLDER_MODAL = { label: 'Delete', operation: 'open_delete_folder_modal' };\nconst OPEN_CREATE_FOLDER_MODAL = { operation: 'open_create_folder_modal' };\nconst RENAME_FOLDER = { operation: 'rename_folder' };\nconst DELETE_FOLDER = { operation: 'delete_folder' };\nconst CREATE_FOLDER = { operation: 'create_foler' };\nconst OPEN_SETTINGS = { label: 'Open Settings', operation: 'open_settings' };\nconst GET_ALL_NOTES_FOLDER = { operation: 'get_all_notes_folder' }\nconst GET_ALL_FOLDERS = { operation: 'get_all_folders' };\n\nconst FolderMenuOptions = [OPEN_RENAME_FOLDER_MODAL, OPEN_DELETE_FOLDER_MODAL, OPEN_SETTINGS];\n\nconst doFolderAction = async (actionName, folder_id, params) => {\n\tswitch (actionName) {\n\t\tcase OPEN_RENAME_FOLDER_MODAL.operation: {\n\t\t\tconst { setOpen } = params;\n\t\t\tsetOpen(RENAME_FOLDER.operation);\n\t\t\tbreak;\n\t\t}\n\t\tcase OPEN_DELETE_FOLDER_MODAL.operation: {\n\t\t\tconst { setOpen } = params;\n\t\t\tsetOpen(DELETE_FOLDER.operation);\n\t\t\tbreak;\n\t\t}\n\t\tcase RENAME_FOLDER.operation: {\n\t\t\tconst { setOpenedFolder, idb, value, close, setSnackError } = params;\n\t\t\tidb\n\t\t\t\t.then(async (db) => {\n\t\t\t\t\tlet tx = db.transaction('folders', 'readwrite');\n\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\tlet folder = await store.get(folder_id);\n\n\t\t\t\t\tfolder.name = value;\n\t\t\t\t\tfolder.timestamp = new Date().getTime();\n\t\t\t\t\tstore.put(folder);\n\t\t\t\t\treturn tx.complete;\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tidb.then(async (db) => {\n\t\t\t\t\t\tlet tx = db.transaction('folders', 'readonly');\n\t\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\t\tlet folder = await store.get(folder_id);\n\t\t\t\t\t\tsetOpenedFolder(folder);\n\t\t\t\t\t\tclose();\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetSnackError('A folder with the same name already exists.');\n\t\t\t\t});\n\n\t\t\tbreak;\n\t\t}\n\t\tcase DELETE_FOLDER.operation: {\n\t\t\tconst { setOpenedFolder, idb } = params;\n\t\t\tidb\n\t\t\t\t.then((db) => {\n\t\t\t\t\tlet tx = db.transaction('folders', 'readwrite');\n\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\tstore.delete(folder_id);\n\t\t\t\t\treturn tx.complete;\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tidb.then(async (db) => {\n\t\t\t\t\t\tlet tx = db.transaction('folders', 'readonly');\n\t\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\t\tlet folder = await store.get(1);\n\t\t\t\t\t\tsetOpenedFolder(folder);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase OPEN_CREATE_FOLDER_MODAL.operation: {\n\t\t\tconst { setShowDropdown, setOpen } = params;\n\t\t\tsetShowDropdown(false);\n\t\t\tsetOpen(CREATE_FOLDER.operation);\n\t\t\tbreak;\n\t\t}\n\t\tcase CREATE_FOLDER.operation: {\n\t\t\tconst { idb, setOpenedFolder, value, close, setSnackError } = params;\n\t\t\tidb\n\t\t\t\t.then((db) => {\n\t\t\t\t\tlet tx = db.transaction('folders', 'readwrite');\n\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\tstore.add({\n\t\t\t\t\t\tname: value,\n\t\t\t\t\t\tcount: 0\n\t\t\t\t\t});\n\t\t\t\t\treturn tx.complete;\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tidb.then(async (db) => {\n\t\t\t\t\t\tlet tx = db.transaction('folders', 'readonly');\n\t\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\t\tlet index = store.index('folderNames');\n\t\t\t\t\t\tlet folder = await index.get(value);\n\t\t\t\t\t\tsetOpenedFolder(folder);\n\t\t\t\t\t\tclose();\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetSnackError('A folder with the same name already exists.');\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase GET_ALL_NOTES_FOLDER.operation: {\n\t\t\tconst { idb, setOpenedFolder } = params;\n\t\t\tidb\n\t\t\t\t.then(async (db) => {\n\t\t\t\t\tlet tx = db.transaction('folders', 'readonly');\n\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\tlet folder = await store.get(folder_id);\n\t\t\t\t\tsetOpenedFolder(folder);\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase GET_ALL_FOLDERS.operation: {\n\t\t\tconst { idb, setFolders, foldersToExclude = [] } = params;\n\t\t\tconst idbFolders = [];\n\t\t\treturn idb\n\t\t\t\t.then((db) => {\n\t\t\t\t\tlet tx = db.transaction('folders', 'readonly');\n\t\t\t\t\tlet store = tx.objectStore('folders');\n\t\t\t\t\treturn store.openCursor();\n\t\t\t\t})\n\t\t\t\t.then(function loopFolders(cursor) {\n\t\t\t\t\tif (!cursor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (foldersToExclude.includes(cursor.value.id)) {\n\t\t\t\t\t\treturn cursor.continue().then(loopFolders);\n\t\t\t\t\t}\n\t\t\t\t\tlet { value } = cursor;\n\t\t\t\t\tidbFolders.push(value);\n\t\t\t\t\treturn cursor.continue().then(loopFolders);\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetFolders(idbFolders);\n\t\t\t\t});\n\t\t}\n\t\tdefault:\n\t\t\tconsole.log('INVALID_OPERATION');\n\t}\n};\n\nexport {\n\tFolderMenuOptions,\n\tOPEN_RENAME_FOLDER_MODAL,\n\tOPEN_DELETE_FOLDER_MODAL,\n\tOPEN_CREATE_FOLDER_MODAL,\n\tRENAME_FOLDER,\n\tDELETE_FOLDER,\n\tOPEN_SETTINGS,\n\tCREATE_FOLDER,\n\tGET_ALL_NOTES_FOLDER,\n\tGET_ALL_FOLDERS\n};\n\nexport default doFolderAction;\n","import React, { useCallback, useMemo, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Clear from '@material-ui/icons/Clear';\nimport SelectAll from '@material-ui/icons/DoneAll';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst iconButtonStyle = { padding: '0 12px' };\n\nconst SelectionHeader = ({ selection, setSelection, clearDropDown, notes, classes }) => {\n    const clearSelectionCallback = useCallback(() => {\n        setSelection([]);\n    }, []);\n\n    const selectAllNotes = useCallback(() => {\n        if (selection.length === notes.length) {\n            setSelection([]);\n        } else {\n            setSelection(notes.map(note => note.id));\n        }\n    }, [selection]);\n\n    useEffect(() => clearDropDown(), []);\n\n    const allNotesSelected = useMemo(() => notes.length === selection.length, [selection]);\n\n    return (<div className=\"container--selectionn-header\">\n        <IconButton style={iconButtonStyle} onClick={clearSelectionCallback}>\n            <Clear />\n        </IconButton>\n        <Typography component=\"h2\" className={classes.heading}>\n            {\n                selection.length === 1 ?\n                    `1 item selected` :\n                    `${selection.length} items selected`\n            }\n        </Typography>\n        <IconButton style={iconButtonStyle} onClick={selectAllNotes}>\n            <SelectAll style={(allNotesSelected ? { color: '#1e88e5' } : {})} />\n        </IconButton>\n    </div>);\n};\n\nconst styles = theme => ({\n    heading: {\n        lineHeight: '42px',\n        fontSize: '16px',\n        fontWeight: 700,\n    }\n});\n\nexport default withStyles(styles)(SelectionHeader);","import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/Spinner';\n\nimport doFolderAction, { OPEN_CREATE_FOLDER_MODAL } from '../../../actions/doFolderAction';\n\nconst selectFolder = (folder, history) => history.push(`/folder/${folder.id}`);\n\nconst FolderList = ({ folders, setShowDropdown, openedFolder, setOpen, show, history }) => {\n\tif (!folders && show) {\n\t\treturn <Spinner />;\n\t}\n\n\treturn (\n\t\t<div className=\"container--list-item\" style={(show ? {} : { maxHeight: 0, opacity: 0 })}>\n\t\t\t{show && folders.map((folder) => (\n\t\t\t\t<Fragment key={`list-item-${folder.id}`}>\n\t\t\t\t\t<div className=\"list-item\" onClick={() => selectFolder(folder, history)}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`list-item-label ${openedFolder.id === folder.id\n\t\t\t\t\t\t\t\t? 'list-item-label__bold'\n\t\t\t\t\t\t\t\t: ''}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`list-item-label ${openedFolder.id === folder.id\n\t\t\t\t\t\t\t\t? 'list-item-label__bold'\n\t\t\t\t\t\t\t\t: ''}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{folder.count}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"separator\" />\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t\t{show && <div className=\"list-item\" key=\"new-folder\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdoFolderAction(OPEN_CREATE_FOLDER_MODAL.operation, undefined, { setShowDropdown, setOpen })\n\t\t\t\t}}>\n\t\t\t\t<div className=\"new-folder-container\">\n\t\t\t\t\t<div className=\"plus-icon\">+</div>New Folder\n\t\t\t\t</div>\n\t\t\t</div>}\n\t\t</div>\n\t);\n};\n\nexport default withRouter(FolderList);","import React, { useState, useContext } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport doFolderAction, { RENAME_FOLDER, CREATE_FOLDER } from '../../../actions/doFolderAction';\nimport IDBContext from '../../../contexts/idbContext';\n\nconst DialogWithTextField = (props) => {\n\tconst { classes } = props;\n\tconst { openedFolder, close, setOpenedFolder, create, setSnackError } = props;\n\tconst headerLabel = (create && 'New Folder') || 'Rename Folder';\n\tconst operation = (create && CREATE_FOLDER.operation) || RENAME_FOLDER.operation\n\n\tconst { idb } = useContext(IDBContext);\n\tconst [value, setValue] = useState(create ? 'Unnamed Folder' : openedFolder.name);\n\n\treturn (\n\t\t<Paper className={classes.root}>\n\t\t\t<div>{headerLabel}</div>\n\t\t\t<TextField\n\t\t\t\tvalue={value}\n\t\t\t\tclassName={classes.rootTextField}\n\t\t\t\tInputProps={{\n\t\t\t\t\tclasses: {\n\t\t\t\t\t\troot: classes.rootTextField,\n\t\t\t\t\t\tfocussed: classes.rootTextField\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t/>\n\t\t\t<Button onClick={() => {\n\t\t\t\tdoFolderAction(operation, openedFolder.id, { setOpenedFolder, idb, value, close, setSnackError });\n\t\t\t}}>Ok</Button>\n\t\t\t<Button onClick={close}> Cancel</Button>\n\t\t</Paper>\n\t);\n};\n\nconst styles = (theme) => ({\n\troot: {\n\t\theight: 150,\n\t\twidth: 250\n\t},\n\trootTextField: {\n\t\tbackgroundColor: '#eee'\n\t}\n});\n\nexport default withStyles(styles)(DialogWithTextField);\n","import React, { useContext } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport IDBContext from '../../../contexts/idbContext';\n\nimport doFolderAction, { DELETE_FOLDER } from '../../../actions/doFolderAction';\n\nconst DeleteFolder = (props) => {\n    const { classes, close } = props;\n    const { openedFolder, setOpenedFolder } = props;\n    const { idb } = useContext(IDBContext);\n\n    return (<Paper className={classes.root}>\n        <div>Delete Folder</div>\n        <div>{`Delete ${openedFolder.name} ?`}</div>\n        <Button\n            onClick={() => {\n                doFolderAction(DELETE_FOLDER.operation, openedFolder.id, { setOpenedFolder, idb });\n                close();\n            }\n            }>\n            Delete\n        </Button>\n        <Button\n            onClick={close}>\n            Cancel\n        </Button>\n    </Paper>);\n}\n\nconst styles = (theme) => ({\n    root: {\n        height: 150,\n        width: 250\n    },\n});\n\n\nexport default withStyles(styles)(DeleteFolder);","import React, { useState, Fragment, useContext, useEffect, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport doFolderAction, { FolderMenuOptions, RENAME_FOLDER, CREATE_FOLDER, GET_ALL_FOLDERS } from '../../../actions/doFolderAction';\n\nimport IDBContext from '../../../contexts/idbContext';\n\nimport FolderList from './FolderList';\nimport DialogWithTextField from './DialogWithTextField';\nimport DeleteFolder from './DeleteFolder';\n\nconst HomePageHeader = ({ openedFolder, setOpenedFolder, setSnackError, showDropdown, setShowDropdown }) => {\n\tconst [folders, setFolders] = useState([]);\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\tconst { idb } = useContext(IDBContext);\n\tconst [open, setOpen] = useState(null);\n\tconst close = useCallback(() => {\n\t\tsetOpen(false);\n\t\tsetAnchorEl(null);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tdoFolderAction(GET_ALL_FOLDERS.operation, undefined, { idb, setFolders });\n\t\t},\n\t\t[openedFolder]\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"container--header\">\n\t\t\t\t<FolderNameButton {...{ setShowDropdown, showDropdown, openedFolder }} />\n\t\t\t\t<MoreOptions {...{ showDropdown, setShowDropdown, setAnchorEl }} />\n\t\t\t\t<Options {...{ anchorEl, setAnchorEl, openedFolder, setOpen, close }} />\n\t\t\t</div>\n\t\t\t<FolderList\n\t\t\t\tfolders={folders}\n\t\t\t\tsetShowDropdown={setShowDropdown}\n\t\t\t\tsetOpen={setOpen}\n\t\t\t\topenedFolder={openedFolder}\n\t\t\t\tshow={showDropdown}\n\t\t\t/>\n\t\t\t<Dialog open={Boolean(open)} onClose={close}>\n\t\t\t\t{[RENAME_FOLDER.operation, CREATE_FOLDER.operation].includes(open) ? (\n\t\t\t\t\t<DialogWithTextField\n\t\t\t\t\t\topenedFolder={openedFolder}\n\t\t\t\t\t\tclose={close}\n\t\t\t\t\t\tsetOpenedFolder={setOpenedFolder}\n\t\t\t\t\t\tcreate={open === CREATE_FOLDER.operation}\n\t\t\t\t\t\tsetSnackError={setSnackError}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t\t<DeleteFolder openedFolder={openedFolder} close={close} setOpenedFolder={setOpenedFolder} />\n\t\t\t\t\t)}\n\t\t\t</Dialog>\n\t\t</Fragment>\n\t);\n};\n\nconst FolderNameButton = ({ setShowDropdown, showDropdown, openedFolder: { name } }) =>\n\t(<div className=\"container--dropdown\">\n\t\t<Button\n\t\t\tonClick={(e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\tsetShowDropdown(!showDropdown);\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t<div className=\"dropdown-text\">{name}</div>\n\t\t\t\t<div className={!showDropdown ? 'dropdown-icon' : 'dropdown-icon dropdown-icon-rotate'} />\n\t\t\t</div>\n\t\t</Button>\n\t</div>);\n\nconst MoreOptions = ({ showDropdown, setShowDropdown, setAnchorEl }) =>\n\t(!showDropdown && <div className=\"container--more-options\" style={!showDropdown ? { maxHeight: 0 } : {}}>\n\t\t<IconButton\n\t\t\tonClick={(e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\tsetAnchorEl(e.currentTarget);\n\t\t\t\tsetShowDropdown(false);\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"more-options\" />\n\t\t</IconButton>\n\t</div>);\n\nconst Options = ({ anchorEl, setAnchorEl, openedFolder, setOpen, close }) =>\n\t(<Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={(e) => setAnchorEl(null)}>\n\t\t{FolderMenuOptions.map((option) => {\n\t\t\tif (!openedFolder.systemFolder || option.operation === 'open_settings') {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={openedFolder.timestamp}\n\t\t\t\t\t\tstyle={{ fontSize: 14 }}\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tdoFolderAction(option.operation, openedFolder.id, { setOpen, close });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option.label}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})}\n\t</Menu>);\n\nexport default HomePageHeader;\n","import React from 'react';\n\nimport SelectionHeader from './SelectionHeader';\nimport HomePageHeader from './HomePageHeader';\n\nconst Header = ({ selection, notes, setSelection, clearDropDown, ...homePageHeaderProps }) => {\n\tconst isSelectionMode = selection.length;\n\n\treturn (isSelectionMode ?\n\t\t<SelectionHeader\n\t\t\tselection={selection}\n\t\t\tsetSelection={setSelection}\n\t\t\tclearDropDown={clearDropDown}\n\t\t\tnotes={notes} /> :\n\t\t<HomePageHeader {...homePageHeaderProps} />);\n};\n\nexport default Header;\n","import workerize from 'workerize';\n\nconst searchWorker = workerize(`\n    export function search(folderId, searchText) {\n            \n        return new Promise(function (resolve, reject) {\n            \n            var openRequest = indexedDB.open('notas', 1);\n\n            var dbPromise = new Promise(function (resolve1, reject1) {\n                openRequest.onsuccess = function(e) {\n                    resolve1(e.target.result);\n                };\n            }).then(function (db) {\n                var transaction = db.transaction(['notes'], 'readonly');\n                var store = transaction.objectStore('notes');\n                var index = store.index('notesFolderId');\n                var keyRange = folderId !== 1 ? IDBKeyRange.only(folderId) : undefined;\n                var filteredNoteIds = [];\n\n                var cursorPromise = new Promise(function (resolve2, reject2) {\n                    index.openCursor(keyRange).onsuccess = function (event) {\n                        var cursor = event.target.result;\n                        if(cursor) {\n                            var note = cursor.value;\n                            if (note.content.indexOf(searchText) >= 0) {\n                                filteredNoteIds.push(note.id)\n                            }\n                            cursor.continue();\n                        } else {\n                            resolve(filteredNoteIds);\n                        }\n                    };\n                });\n                \n            });\n        });\n    }\n`);\n\nexport default searchWorker;","import React, { useState, useCallback, useContext } from 'react';\nimport { debounce } from 'lodash';\n\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HighlightOff from '@material-ui/icons/Clear';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { withStyles } from '@material-ui/core/styles'\n\nimport idbContext from '../../../contexts/idbContext';\n\nimport searchWorker from '../../../workers/search';\nimport doNoteAction, { GET_NOTES_BY_IDS } from '../../../actions/doNoteAction';\n\nconst searchNotes = debounce(async (folderId, searchText, idb, setNotes) => {\n    const noteIds = await searchWorker.search(folderId, searchText);\n    doNoteAction(GET_NOTES_BY_IDS.operation, {idb, noteIds, setNotes})\n}, 400);\n\nconst SearchBar = ({ classes, openedFolder, setNotes }) => {\n    const {idb} = useContext(idbContext);\n    const [value, setValue] = useState('');\n    const clearValue = useCallback(() => {\n        searchNotes(openedFolder.id, '', idb, setNotes);\n        setValue('');\n    }, [openedFolder]);\n\n    return (\n        <div className=\"container--search-bar\">\n            <TextField\n                className={classes.root}\n                style={{ fontSize: 17 }}\n                value={value}\n                placeholder=\"Search notes\"\n                onChange={(e) => {\n                    searchNotes(openedFolder.id, e.target.value, idb, setNotes);\n                    setValue(e.target.value)\n                }}\n                variant=\"outlined\"\n                InputProps={{\n                    startAdornment: (<InputAdornment position=\"start\">\n                        <IconButton className={classes.marginLeft} >\n                            <SearchIcon style={{ fontSize: '17px' }} />\n                        </IconButton>\n                    </InputAdornment>),\n                    endAdornment: (Boolean(value) && <InputAdornment position=\"end\">\n                        <IconButton className={classes.marginRight} onClick={clearValue}>\n                            <HighlightOff style={{ fontSize: '17px' }} />\n                        </IconButton>\n                    </InputAdornment>),\n                    classes: {\n                        input: classes.fontSize,\n                        notchedOutline: classes.notchedOutline\n                    }\n                }} />\n        </div>);\n}\n\nconst styles = theme => ({\n    root: {\n        maxHeight: 30,\n        width: '100%',\n        background: '#dcdcdc',\n        borderRadius: '5px',\n    },\n    notchedOutline: {\n        border: 0\n    },\n    marginRight: {\n        marginRight: '-20px'\n    },\n    marginLeft: {\n        marginLeft: '-15px'\n    },\n    fontSize: {\n        fontSize: '12px'\n    }\n});\n\nexport default withStyles(styles)(SearchBar); ","import React from 'react';\n\nconst TextView = ({ children, style, className }) => <span style={style} className={className}>{children}</span>;\n\nexport default TextView;","import React, { useCallback, useMemo } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckCircleOutline from '@material-ui/icons/RadioButtonUnchecked'\nimport CheckCirlce from '@material-ui/icons/CheckCircleRounded';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { getReadableTimeStamp } from '../../../application/utils';\nimport TextView from '../../../components/TextView';\nimport { getColorFromLabel } from '../../../contants/noteColors';\n\nconst cardRootStyle = ({ color }) => ({ backgroundColor: getColorFromLabel(color, 'value'), position: 'relative' });\n\nconst Note = props => {\n    const { note, note: { previewContent }, classes, selection, setSelection, history } = props;\n\n    const isCheceked = useMemo(() => selection.includes(note.id), [selection, note.id]);\n\n    const checkCallback = useCallback((e) => {\n        e.stopPropagation();\n        if (isCheceked) {\n            setSelection(selection.filter(noteId => noteId !== note.id));\n        } else {\n            setSelection([...selection, note.id]);\n        }\n    }, [selection, note.id]);\n    const noteClicked = useCallback(() => {\n        history.push(`/note/${note.id}`);\n    }, [note.id])\n\n    return <Card className={classes.root} style={cardRootStyle(note)} onClick={noteClicked}>\n        <p className={classes.content}>\n            <strong style={{ color: '#000' }}>{previewContent.substr(0, 21)}</strong>\n            {previewContent.substr(21)}\n        </p>\n        <div className=\"time-stamp-wrappper\">\n            <TextView className=\"text-view-content\">{getReadableTimeStamp(note.lastModifiedTimestamp)}</TextView>\n        </div>\n        <Checkbox style={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            padding: '5px',\n            zIndex: '2',\n        }}\n            checked={isCheceked}\n            icon={<CheckCircleOutline style={{ color: '#1e88e5' }} />}\n            checkedIcon={<CheckCirlce style={{ color: '#1e88e5' }} />}\n            onClick={checkCallback} />\n    </Card>\n}\n\nconst styles = theme => ({\n    root: {\n        height: '180px',\n        width: '140px',\n        boxSizing: 'border-box',\n        padding: '10px',\n        margin: '5px',\n    },\n    content: {\n        color: '#555',\n        fontSize: '14px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        height: 'calc(100% - 35px)',\n    }\n});\n\nexport default withStyles(styles)(Note);","import React from 'react';\n\nconst NoNotesFallback = () => {\n    return (<div style={{\n        margin: '50% auto',\n        alignSelf: 'center',\n        fontSize: '18px',\n        fontWeight: 500,\n        color: '#6d6d6d',\n    }}>No Notes Here</div>);\n};\n\nexport default NoNotesFallback;\n\n","import React, { memo } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Note from './Note';\nimport NoNotesFallback from './NoNotesFallback';\nimport Spinner from '../../../components/Spinner';\n\nconst NotesContainer = ({ selection, setSelection, fetching, notes, history }) => {\n    return (<div className=\"container--notes\">\n        {\n            Boolean(notes.length) ?\n                notes.map(note =>\n                    <Note\n                        key={note.creationTimestamp}\n                        note={note}\n                        history={history}\n                        selection={selection}\n                        setSelection={setSelection} />) :\n                fetching ?\n                    <Spinner /> :\n                    <NoNotesFallback />\n        }\n    </div>);\n}\n\nconst areNotesEqual = (prevProps, nextProps) => {\n    const { notes: prevNotes, selection: prevSelection, fetching: prevFetching } = prevProps;\n    const { notes: nextNotes, selection: nextSelection, fetching: nextFetching } = nextProps;\n    return prevNotes === nextNotes && prevSelection === nextSelection && prevFetching === nextFetching;\n}\n\nexport default withRouter(memo(NotesContainer, areNotesEqual));","import React, { useCallback, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport doNoteAction, { CREATE_NOTE } from '../../../actions/doNoteAction';\nimport IDBContext from '../../../contexts/idbContext';\n\nconst AddNotes = ({ history, classes, openedFolder, setOpenedFolder, show }) => {\n    const { idb } = useContext(IDBContext);\n    const changeRoute = useCallback((noteId) => {\n        history.replace(`/note/${noteId}`);\n    }, []);\n    const createNote = useCallback(() => {\n        doNoteAction(CREATE_NOTE.operation, { idb, openedFolder, setOpenedFolder, changeRoute });\n    }, [openedFolder]);\n\n    return (show && <div className=\"container--add-notes\">\n        <Fab className={classes.fabRoot} onClick={createNote}>\n            <AddIcon className={classes.iconRoot} />\n        </Fab>\n    </div>);\n}\n\nconst styles = theme => ({\n    fabRoot: {\n        backgroundColor: '#ffc400',\n        '&:hover': {\n            backgroundColor: '#ffab00',\n        }\n    },\n    iconRoot: {\n        color: '#fff',\n        fontSize: '35px',\n    }\n});\n\nexport default withRouter(withStyles(styles)(AddNotes));","import React, { useCallback, useContext, useState } from 'react';\n\nimport Folder from '@material-ui/icons/FolderOutlined';\nimport Delete from '@material-ui/icons/DeleteOutlined';\nimport Restore from '@material-ui/icons/RestoreOutlined';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport IDBContext from '../../../contexts/idbContext';\n\nimport { OPTION_MOVE, OPTION_DELETE, OPTION_RESTORE } from '../../../application/noteOperations';\nimport doNoteAction, { DELETE_NOTES, MOVE_NOTES } from '../../../actions/doNoteAction';\nimport doFolderAction, { GET_ALL_FOLDERS } from '../../../actions/doFolderAction';\n\nconst BottomNotesOperations = ({ classes, options, show, openedFolder, selection, setOpenedFolder, setSelection, setCreateDialogOpen }) => {\n\tconst { idb } = useContext(IDBContext);\n\tconst [open, setOpen] = useState(false);\n\tconst [folders, setFolders] = useState([]);\n\n\tconst deleteNotesCallback = useCallback(\n\t\t() => {\n\t\t\tdoNoteAction(DELETE_NOTES.operation, { idb, selection, openedFolder, setOpenedFolder });\n\t\t\tsetSelection([]);\n\t\t},\n\t\t[selection]\n\t);\n\tconst moveToCallback = useCallback(\n\t\t(moveToFolderId) => {\n\t\t\tdoNoteAction(MOVE_NOTES.operation, { idb, selection, openedFolder, setOpenedFolder, moveToFolderId });\n\t\t\tsetSelection([]);\n\t\t\tcloseDialog();\n\t\t},\n\t\t[selection]\n\t);\n\tconst closeDialog = useCallback(() => {\n\t\tsetOpen(false);\n\t}, []);\n\tconst openDialog = useCallback(\n\t\tasync () => {\n\t\t\tconst foldersToExclude = [openedFolder.id];\n\t\t\tawait doFolderAction(GET_ALL_FOLDERS.operation, openedFolder.id, { idb, setFolders, foldersToExclude });\n\t\t\tsetOpen(true)\n\t\t},\n\t\t[openedFolder]\n\t);\n\tconst getBottomOptionProps = option => {\n\t\tswitch (option.operation) {\n\t\t\tcase OPTION_MOVE.operation:\n\t\t\t\treturn { option, Icon: Folder, callback: openDialog };\n\t\t\tcase OPTION_RESTORE.operation:\n\t\t\t\treturn { option, Icon: Restore, callback: () => moveToCallback(1) };\n\t\t\tcase OPTION_DELETE.operation:\n\t\t\t\treturn { option, Icon: Delete, callback: deleteNotesCallback };\n\t\t\tdefault:\n\t\t\t\treturn () => { }\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container--bottom-toolbar\" style={show ? {} : { height: 0 }}>\n\t\t\t{\n\t\t\t\toptions.map(option =>\n\t\t\t\t\t<BottomOption\n\t\t\t\t\t\tkey={option.operation}\n\t\t\t\t\t\tclassName={classes.buttonRoot}\n\t\t\t\t\t\t{...getBottomOptionProps(option)} />)\n\t\t\t}\n\t\t\t<Dialog open={open} onClose={closeDialog} scroll=\"paper\">\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemText primary='Select Folder' classes={{ primary: classes.flexJustifyCenter }} />\n\t\t\t\t</ListItem>\n\t\t\t\t<Divider />\n\t\t\t\t<List style={{ maxHeight: '80vh', padding: 0 }}>\n\t\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tclasses={{ root: classes.flexJustifyCenter }}\n\t\t\t\t\t\t\t\tonClick={() => moveToCallback(folder.id)} key={folder.id}>\n\t\t\t\t\t\t\t\t<ListItemText primary={folder.name} classes={{ primary: classes.listItemPrimary }} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nconst BottomOption = ({ option, className, Icon, callback }) => (\n\t<div className=\"container--bottom-tool-button\">\n\t\t<Button className={className} onClick={callback}>\n\t\t\t<Icon />\n\t\t\t<span className=\"bottom-button-text\">{option.label}</span>\n\t\t</Button>\n\t</div>);\n\nconst styles = (theme) => ({\n\tbuttonRoot: {\n\t\twidth: '100%',\n\t\theight: '100%'\n\t},\n\tlistItemPrimary: {\n\t\tmaxWidth: '175px',\n\t\twhiteSpace: 'nowrap',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t},\n\tflexJustifyCenter: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t}\n});\n\nexport default withStyles(styles)(BottomNotesOperations);\n","import React, { useState, useContext, useEffect, useCallback, useMemo } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Spinner from '../../components/Spinner';\n\nimport './styles.css';\n\nimport IDBContext from '../../contexts/idbContext';\n\nimport { options } from '../../application/noteOperations';\n\nimport doNoteAction, { GET_ALL_NOTES } from './../../actions/doNoteAction';\nimport doFolderAction, { GET_ALL_NOTES_FOLDER } from './../../actions/doFolderAction';\n\nimport Header from './Header'\nimport SearchBar from './SearchBar';\nimport NotesContainer from './NotesContainer';\nimport AddNotes from './AddNotes';\nimport BottomNotesOperations from './BottomNotesOperations';\n\nconst HomePage = ({ match }) => {\n\tconst { idb } = useContext(IDBContext);\n\n\tconst [openedFolder, setOpenedFolder] = useState(null);\n\tconst [snackError, setSnackError] = useState(null);\n\tconst [showDropdown, setShowDropdown] = useState(false);\n\tconst [selection, setSelection] = useState([]);\n\tconst [notes, setNotes] = useState([]);\n\tconst [fetching, setFetching] = useState(true);\n\n\tconst bottomOptions = useMemo(() => options(openedFolder), [openedFolder]);\n\n\tconst clearDropDown = useCallback(() => {\n\t\tsetShowDropdown(false);\n\t}, []);\n\tconst closeSnackBar = useCallback(() => {\n\t\tsetSnackError(null);\n\t}, []);\n\n\tconst showBottomToolbar = selection.length !== 0;\n\tconst isTrashFolder = openedFolder && openedFolder.id === 2;\n\n\tuseEffect(() => {\n\t\tconst folderId = Number.parseInt(match.params.id);\n\t\tdoFolderAction(GET_ALL_NOTES_FOLDER.operation, folderId, { idb, setOpenedFolder });\n\t}, [match]);\n\n\tuseEffect(() => {\n\t\tdoNoteAction(GET_ALL_NOTES.operation, { idb, openedFolder, setFetching, setNotes });\n\t}, [openedFolder]);\n\n\n\tif (!openedFolder) {\n\t\treturn <Spinner />;\n\t}\n\n\treturn (\n\t\t<div className=\"container--home-page\" onClick={clearDropDown}>\n\t\t\t<Header\n\t\t\t\topenedFolder={openedFolder}\n\t\t\t\tsetOpenedFolder={setOpenedFolder}\n\t\t\t\tsetSnackError={setSnackError}\n\t\t\t\tshowDropdown={showDropdown}\n\t\t\t\tsetShowDropdown={setShowDropdown}\n\t\t\t\tnotes={notes}\n\t\t\t\tselection={selection}\n\t\t\t\tclearDropDown={clearDropDown}\n\t\t\t\tsetSelection={setSelection} />\n\t\t\t<SearchBar openedFolder={openedFolder} setNotes={setNotes} />\n\t\t\t<NotesContainer\n\t\t\t\tfetching={fetching}\n\t\t\t\tnotes={notes}\n\t\t\t\tselection={selection}\n\t\t\t\tsetSelection={setSelection} />\n\t\t\t<AddNotes\n\t\t\t\topenedFolder={openedFolder}\n\t\t\t\tsetOpenedFolder={setOpenedFolder}\n\t\t\t\tfetching={fetching}\n\t\t\t\tnotes={notes}\n\t\t\t\tshow={!showBottomToolbar && !isTrashFolder} />\n\t\t\t<BottomNotesOperations\n\t\t\t\toptions={bottomOptions}\n\t\t\t\tshow={showBottomToolbar}\n\t\t\t\tselection={selection}\n\t\t\t\topenedFolder={openedFolder}\n\t\t\t\tsetSelection={setSelection}\n\t\t\t\tsetOpenedFolder={setOpenedFolder} />\n\t\t\t<Snackbar\n\t\t\t\topen={Boolean(snackError)}\n\t\t\t\tautoHideDuration={2000}\n\t\t\t\tonClose={closeSnackBar}\n\t\t\t\tmessage={snackError} />\n\t\t</div>\n\t);\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst Circle = ({ onClick, color }) =>\n    <div className=\"container--circle-icon\" style={{ marginRight: 10 }} onClick={onClick}>\n        <div style={{\n            borderRadius: '50%',\n            backgroundColor: color,\n            height: 12,\n            width: 12,\n        }} />\n    </div>;\n\nexport default Circle;","import React, { useContext } from 'react';\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Circle from './Circle';\n\nimport colors from '../../../contants/noteColors'\n\nimport doNoteAction, { CHANGE_NOTE_COLOR } from '../../../actions/doNoteAction';\nimport idbContext from '../../../contexts/idbContext';\n\nconst ColorSelector = ({ note, setNote }) => {\n    const { idb } = useContext(idbContext);\n    const colorOptions = colors.filter(option => option.label !== note.color);\n    const changeNoteColor = (color) => doNoteAction(CHANGE_NOTE_COLOR.operation, { idb, setNote, note, color });\n\n    return (<Paper style={{ display: 'flex', padding: 5 }}>\n        {colorOptions.map(option => <Circle key={option.label} color={option.circleColor} onClick={() => changeNoteColor(option.label)} />)}\n    </Paper>);\n}\n\nexport default ColorSelector;","import React, { useCallback } from 'react';\n\nimport Popper from '@material-ui/core/Popper';\n\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport Done from '@material-ui/icons/Done';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\n\nimport ColorSelector from '../NoteHeaderToolbar/ColorSelector';\n\nimport { getColorFromLabel } from '../../../contants/noteColors';\n\nimport Circle from './Circle';\n\nconst iconSize = color => ({ fontSize: 25, color: getColorFromLabel(color, 'optionColor') });\n\nconst NoteHeaderToolbar = ({ anchorEl, iconClick, backButtonClick, doneButtonClick, noteColor, note, setNote, editorRef }) => {\n\n    const undo = useCallback((e) => {\n        e.preventDefault();\n        editorRef.current.undo();\n    }, []);\n    const redo = useCallback((e) => {\n        e.preventDefault();\n        editorRef.current.redo();\n    }, []);\n\n    return (<div className=\"container--header-toolbar\">\n        <KeyboardArrowLeft style={iconSize(noteColor)} onClick={backButtonClick} />\n        <Circle color={getColorFromLabel(noteColor, 'circleColor')} onClick={(e) => iconClick(e, 'change_color')} />\n        <Undo style={{ ...iconSize(noteColor), marginRight: 10 }} onClick={undo} />\n        <Redo style={{ ...iconSize(noteColor), marginRight: 10 }} onClick={redo} />\n        <Done style={{ ...iconSize(noteColor), marginRight: 10, marginLeft: 5 }} onClick={doneButtonClick}/>\n        <MoreVert style={iconSize(noteColor)} />\n        <Popper open={Boolean(anchorEl)} anchorEl={anchorEl} placement=\"bottom\">\n            <ColorSelector {...{ note, setNote }} />s\n        </Popper>\n    </div>);\n};\n\nexport default NoteHeaderToolbar;\n","const BOLD = 'bold';\nconst ITALIC = 'italic';\nconst UNDERLINE = 'underlined';\nconst HEADING = 'heading-two';\nconst BULLETED_LIST = 'bulleted-list';\nconst NUMBERED_LIST = 'numbered-list';\nconst QUOTE = 'block-quote';\n\nconst options = [BOLD, ITALIC, UNDERLINE, HEADING, QUOTE, BULLETED_LIST, NUMBERED_LIST];\n\nconst blocks = [HEADING, QUOTE, BULLETED_LIST, NUMBERED_LIST];\nconst marks = [BOLD, ITALIC, UNDERLINE];\n\nexport {\n    blocks,\n    marks,\n    BOLD,\n    ITALIC,\n    UNDERLINE,\n    HEADING,\n    QUOTE,\n    BULLETED_LIST,\n    NUMBERED_LIST,\n}\n\nexport default options;","import React, { useMemo } from 'react';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Bold from '@material-ui/icons/FormatBold';\nimport Italic from '@material-ui/icons/FormatItalic';\nimport Underline from '@material-ui/icons/FormatUnderlined';\nimport Heading from '@material-ui/icons/FormatSize'\nimport Quote from '@material-ui/icons/FormatQuote';\nimport BulletedList from '@material-ui/icons/FormatListBulleted';\nimport NumberedList from '@material-ui/icons/FormatListNumbered';\n\nimport { getColorFromLabel } from '../../../contants/noteColors';\n\nimport options, { marks, BOLD, ITALIC, UNDERLINE, HEADING, QUOTE, BULLETED_LIST, NUMBERED_LIST } from '../../../contants/richTextOptions';\nimport { IconButton } from '@material-ui/core';\n\nconst defaultStyle = { fontSize: 20 }\nconst activeStyle = { color: '#000', ...defaultStyle };\nconst DEFAULT_NODE = 'paragraph';\n\nconst hasMark = (type, value) => value.activeMarks.some(mark => mark.type === type);\n\nconst hasBlock = (type, value) => value.blocks.some(node => node.type === type);\n\nconst RichTextOptions = ({ value, editorRef, note }) => {\n\n    const noteColor = useMemo(() => getColorFromLabel(note.color, 'circleColor'), [note])\n\n    const onClickMark = (event, type) => {\n        event.preventDefault()\n        editorRef.current.toggleMark(type)\n    }\n\n    const onClickBlock = (event, type) => {\n        event.preventDefault()\n        if (!editorRef.current) {\n            return;\n        }\n\n        const { value } = editorRef.current;\n        const { document } = value\n\n        if (type !== 'bulleted-list' && type !== 'numbered-list') {\n            const isActive = hasBlock(type, value)\n            const isList = hasBlock('list-item', value)\n\n            if (isList) {\n                editorRef.current\n                    .setBlocks(isActive ? DEFAULT_NODE : type)\n                    .unwrapBlock('bulleted-list')\n                    .unwrapBlock('numbered-list')\n            } else {\n                editorRef.current.setBlocks(isActive ? DEFAULT_NODE : type)\n            }\n        } else {\n            const isList = hasBlock('list-item', value)\n            const isType = value.blocks.some(block => {\n                return !!document.getClosest(block.key, parent => parent.type === type)\n            })\n\n            if (isList && isType) {\n                editorRef.current\n                    .setBlocks(DEFAULT_NODE)\n                    .unwrapBlock('bulleted-list')\n                    .unwrapBlock('numbered-list')\n            } else if (isList) {\n                editorRef.current\n                    .unwrapBlock(\n                        type === 'bulleted-list' ? 'numbered-list' : 'bulleted-list'\n                    )\n                    .wrapBlock(type)\n            } else {\n                editorRef.current.setBlocks('list-item').wrapBlock(type)\n            }\n        }\n    }\n\n    return <Paper style={{\n        display: 'flex',\n        justifyContent: 'space-around',\n        boxShadow: 'none',\n        margin: '5px 0'\n    }}>\n\n        {\n            options.map(option =>\n                <IconButton\n                    key={option}\n                    style={{ padding: 10 }}\n                    onClick={e => marks.includes(option) ? onClickMark(e, option) : onClickBlock(e, option)}>\n                    {getIconForOption(option, marks.includes(option), value)}\n                </IconButton>)\n        }\n        <style dangerouslySetInnerHTML={\n            {\n                __html: `\n                    blockquote {\n                        border-left: 2px solid ${noteColor};\n                    }\n                `\n            }\n        } >\n        </style>\n    </Paper>;\n}\n\nconst getIconForOption = (option, isMark, value) => {\n    let isActive = isMark ? hasMark(option, value) : hasBlock(option, value);\n    if (['numbered-list', 'bulleted-list'].includes(option)) {\n        const { document, blocks } = value;\n\n        if (blocks.size > 0) {\n            const parent = document.getParent(blocks.first().key);\n            isActive = hasBlock('list-item', value) && parent && parent.type === option;\n        }\n    }\n    switch (option) {\n        case BOLD:\n            return <Bold style={isActive ? activeStyle : defaultStyle} />\n        case ITALIC:\n            return <Italic style={isActive ? activeStyle : defaultStyle} />\n        case UNDERLINE:\n            return <Underline style={isActive ? activeStyle : defaultStyle} />\n\n        case HEADING:\n            return <Heading style={isActive ? activeStyle : defaultStyle} />\n        case QUOTE:\n            return <Quote style={isActive ? activeStyle : defaultStyle} />\n        case BULLETED_LIST:\n            return <BulletedList style={isActive ? activeStyle : defaultStyle} />\n        case NUMBERED_LIST:\n            return <NumberedList style={isActive ? activeStyle : defaultStyle} />\n        default:\n            return null;\n    }\n}\n\nexport default RichTextOptions;","import React, { useContext } from 'react';\nimport { debounce } from 'lodash';\n\nimport { Editor } from 'slate-react'\n\nimport TextView from '../../../components/TextView';\nimport doNoteAction, { SAVE_NOTE } from '../../../actions/doNoteAction';\n\nimport { getReadableTimeStamp } from '../../../application/utils';\n\nimport RichTextOption from '../NoteHeaderToolbar/RichTextOptions';\nimport idbContext from '../../../contexts/idbContext';\n\nconst saveNote = debounce((idb, value, note, setNote) => {\n    doNoteAction(SAVE_NOTE.operation, { idb, value, note, setNote });\n}, 600);\n\nconst NoteBody = ({ editorRef, value, setValue, note, wordCount, setNote }) => {\n    const { idb } = useContext(idbContext);\n\n    const onKeyDown = (event, editor, next) => {\n        return next()\n    }\n\n    const renderNode = (props, editor, next) => {\n        const { attributes, children, node } = props\n\n        switch (node.type) {\n            case 'block-quote':\n                return <blockquote {...attributes}>{children}</blockquote>\n            case 'bulleted-list':\n                return <ul {...attributes}>{children}</ul>\n            case 'heading-two':\n                return <h2 {...attributes}>{children}</h2>\n            case 'list-item':\n                return <li {...attributes}>{children}</li>\n            case 'numbered-list':\n                return <ol {...attributes}>{children}</ol>\n            default:\n                return next()\n        }\n    }\n\n    const renderMark = (props, editor, next) => {\n        const { children, mark, attributes } = props\n\n        switch (mark.type) {\n            case 'bold':\n                return <strong {...attributes}>{children}</strong>\n            case 'italic':\n                return <em {...attributes}>{children}</em>\n            case 'underlined':\n                return <u {...attributes}>{children}</u>\n            default:\n                return next()\n        }\n    }\n\n    return <>\n        <RichTextOption {...{ value, editorRef, note }} />\n        <div className=\"container--info\">\n            <TextView className=\"text-view-content\">{getReadableTimeStamp(note.lastModifiedTimestamp)}</TextView>\n            <TextView className=\"text-view-content--separator\">|</TextView>\n            <TextView className=\"text-view-content\">{`${wordCount} words`}</TextView>\n        </div>\n        <Editor\n            spellCheck\n            autoFocus\n            style={{\n                height: 'calc(100% - 50px)',\n                padding: '5px',\n                boxSizing: 'border-box',\n                overflow: 'auto',\n            }}\n            placeholder=\"Enter your note...\"\n            ref={editor => editorRef.current = editor}\n            value={value}\n            onChange={({ value }) => {\n                saveNote(idb, value, note, setNote);\n                setValue(value)\n            }\n            }\n            onKeyDown={onKeyDown}\n            renderNode={renderNode}\n            renderMark={renderMark}\n        />\n    </>;\n}\n\nexport default NoteBody;\n","import workerize from 'workerize';\n\nconst worker = workerize(`\n    export function wordCount(noteId) {\n            \n        return new Promise(function (resolve, reject) {\n            \n            var openRequest = indexedDB.open('notas', 1);\n\n            var dbPromise = new Promise(function (resolve1, reject1) {\n                openRequest.onsuccess = function(e) {\n                    resolve1(e.target.result);\n                };\n            }).then(function (db) {\n                var transaction = db.transaction(['notes'], 'readonly');\n                var store = transaction.objectStore('notes');\n\n                var getRequest = store.get(noteId);\n                getRequest.onsuccess = function (e) {\n                    var note = e.target.result;\n                    var words = note.content.split(/\\\\s+/g).filter(w => w !== '');\n                    resolve(words.length);\n                }\n                getRequest.onerror = function (e) { reject(e.target.result); };\n            });\n        });\n\n    }\n`);\n\nexport default worker;","import React, { useEffect, useState, useContext, useCallback, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport doNoteAction, { GET_NOTE_BY_ID, SAVE_NOTE } from '../../actions/doNoteAction';\nimport idbContext from '../../contexts/idbContext';\n\nimport NoteHeaderToolbar from './NoteHeaderToolbar';\nimport NoteBody from './NoteBody';\nimport Spinner from '../../components/Spinner';\n\nimport { getColorFromLabel } from '../../contants/noteColors';\nimport wordCountWorker from '../../workers/wordCount';\n\n\nimport './styles.css';\n\nconst NotePage = ({ match, history }) => {\n    const { idb } = useContext(idbContext);\n\n    const [note, setNote] = useState(null);\n    const [value, setValue] = useState(null);\n    const [toolTipAnchorEl, setToolTipAnchorEl] = useState(null);\n    const [wordCount, setWordCount] = useState(-1);\n\n    const iconClick = useCallback((e, tools) => {\n        e.stopPropagation();\n        setToolTipAnchorEl(e.currentTarget);\n    }, []);\n    const closeToolTip = useCallback(() => setToolTipAnchorEl(null), []);\n    const backButtonClick = useCallback(() => history.replace(`/folder/${note.folderId}`), [note && note.folderId]);\n    const doneButtonClick = useCallback(() => {\n        doNoteAction(SAVE_NOTE.operation, { idb, note, value })\n        history.replace('/');\n    }, [note, value]);\n\n    useEffect(() => {\n        const noteId = match.params.id;\n        doNoteAction(GET_NOTE_BY_ID.operation, { idb, setNote, setValue, noteId })\n    }, []);\n\n    useEffect(() => {\n        if (note) {\n            wordCountWorker.wordCount(note.id).then((countWords) => {\n                setWordCount(countWords);\n            });\n        }\n    }, [note]);\n\n    const editorRef = useRef();\n\n    if (!note) {\n        return <Spinner />;\n    }\n\n    return (\n        <div\n            className=\"container--note-page\"\n            style={{ backgroundColor: getColorFromLabel(note.color, 'value') }}\n            onClick={closeToolTip}>\n            <NoteHeaderToolbar {...{\n                anchorEl: toolTipAnchorEl,\n                iconClick,\n                backButtonClick,\n                doneButtonClick,\n                noteColor: note.color,\n                note,\n                setNote,\n                editorRef,\n            }} />\n            <div className=\"container--note-body\">\n                <NoteBody  {...{\n                    value,\n                    setValue,\n                    editorRef,\n                    note,\n                    setNote,\n                    wordCount,\n                }} />\n            </div>\n        </div>);\n};\n\nexport default withRouter(NotePage);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FourOhFour = () => <div style={{\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    flexDirection: 'column',\n    fontSize: 20,\n}}>\n    <div style={{\n        fontWeight: 500,\n        color: '#989797',\n        marginBottom: 20,\n        marginTop: -50,\n    }}>404 Page Not Found</div>\n    <Link style={{ color: '#ffc400' }} to=\"/\">Home</Link>\n</div>\n\nexport default FourOhFour;","/* eslint-disable */\n\nimport { openDb } from 'idb';\nimport Plain from 'slate-plain-serializer';\nimport { WHITE } from '../contants/noteColors';\n\nconst DEFAULT_NOTE_TEXT = 'This is supposed to be a long long long note asdasdasdasdadsasddasdasddasd';\n\nconst timestamp = new Date().getTime();\n\nexport const initializeIDB = () => {\n\treturn openDb('notas', 1, (upgradeDb) => {\n\t\tswitch (upgradeDb.oldVersion) {\n\t\t\tcase 0:\n\t\t\tcase 1:\n\t\t\t\tlet foldersObjectStore = upgradeDb.createObjectStore('folders', { keyPath: 'id', autoIncrement: true });\n\t\t\t\tfoldersObjectStore.createIndex('folderNames', 'name', { unique: true });\n\n\t\t\t\tfoldersObjectStore.add({ count: 1, timestamp: new Date().getTime(), name: 'All Notes', systemFolder: true });\n\t\t\t\tfoldersObjectStore.add({ count: 0, timestamp: new Date().getTime(), name: 'Trash', systemFolder: true });\n\n\t\t\t\tlet notesObjectStore = upgradeDb.createObjectStore('notes', { keyPath: 'id', autoIncrement: true });\n\t\t\t\tnotesObjectStore.createIndex('notesCreationTimestamp', 'creationTimestamp');\n\t\t\t\tnotesObjectStore.createIndex('notesLastModifiedTimestamp', 'lastModifiedTimestamp');\n\t\t\t\tnotesObjectStore.createIndex('notesFolderId', 'folderId');\n\n\t\t\t\t// TODO: sort out previewContent issue in Grid View\n\t\t\t\tnotesObjectStore.add(\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: WHITE.label,\n\t\t\t\t\t\tcontent: DEFAULT_NOTE_TEXT,\n\t\t\t\t\t\tpreviewContent: DEFAULT_NOTE_TEXT.substr(0, 80),\n\t\t\t\t\t\tstructuredContent: Plain.deserialize(DEFAULT_NOTE_TEXT).toJSON(),\n\t\t\t\t\t\tfolderId: 1,\n\t\t\t\t\t\tcreationTimestamp: timestamp,\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t});\n\t\t}\n\t});\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport NotePage from './pages/NotePage';\nimport FourOhFour from './pages/404';\n\nimport { initializeIDB } from './indexedDB';\n\nimport IDBContext from './contexts/idbContext';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.idb = initializeIDB();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<IDBContext.Provider value={{ idb: this.idb }}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={props => <Redirect to={{\n\t\t\t\t\t\t\tpathname: \"/folder/1\",\n\t\t\t\t\t\t\tstate: { from: props.location }\n\t\t\t\t\t\t}} />} />\n\t\t\t\t\t\t<Route path=\"/folder/:id\" exact component={HomePage} />\n\t\t\t\t\t\t<Route path=\"/note/:id\" component={NotePage} />\n\t\t\t\t\t\t<Route component={FourOhFour} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</IDBContext.Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}